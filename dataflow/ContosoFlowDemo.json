{
	"name": "ContosoFlowDemo",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomerData",
						"type": "DatasetReference"
					},
					"name": "source1",
					"script": "source(output(\n\t\tCustomerKey as string,\n\t\tGeographyKey as string,\n\t\tCustomerLabel as string,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tNameStyle as string,\n\t\tBirthDate as string,\n\t\tMaritalStatus as string,\n\t\tSuffix as string,\n\t\tGender as string,\n\t\tEmailAddress as string,\n\t\tYearlyIncome as string,\n\t\tTotalChildren as string,\n\t\tNumberChildrenAtHome as string,\n\t\tEducation as string,\n\t\tOccupation as string,\n\t\tHouseOwnerFlag as string,\n\t\tNumberCarsOwned as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tPhone as string,\n\t\tDateFirstPurchase as string,\n\t\tCustomerType as string,\n\t\tCompanyName as string,\n\t\tETLLoadID as string,\n\t\tLoadDate as string,\n\t\tUpdateDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1"
				},
				{
					"dataset": {
						"referenceName": "FactOnlineSales",
						"type": "DatasetReference"
					},
					"name": "source2",
					"script": "source(output(\n\t\tStoreKey as integer,\n\t\tProductKey as integer,\n\t\tCustomerKey as integer,\n\t\tSalesOrderNumber as string,\n\t\tSalesOrderLineNumber as integer,\n\t\tSalesQuantity as integer,\n\t\tSalesAmount as decimal(19,4),\n\t\tReturnQuantity as integer,\n\t\tReturnAmount as decimal(19,4),\n\t\tDiscountQuantity as integer,\n\t\tDiscountAmount as decimal(19,4),\n\t\tTotalCost as decimal(19,4),\n\t\tUnitCost as decimal(19,4),\n\t\tUnitPrice as decimal(19,4)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select       StoreKey\\n      , ProductKey\\n      , CustomerKey\\n      , SalesOrderNumber\\n      , SalesOrderLineNumber\\n      , SalesQuantity\\n      , SalesAmount\\n      , ReturnQuantity\\n      , ReturnAmount\\n      , DiscountQuantity\\n      , DiscountAmount\\n      , TotalCost\\n      , UnitCost\\n      , UnitPrice from FactOnlineSales',\n\tformat: 'query',\n\twildcardPaths:['factonlinesales.txt']) ~> source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataFlowSink",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"script": "Pivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true) ~> sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1",
					"script": "source1 derive(CustomerKey = toInteger(CustomerKey),\n\t\tGeographyKey = toInteger(GeographyKey),\n\t\tNameStyle = toBoolean(NameStyle),\n\t\tBirthDate = toDate(BirthDate),\n\t\tYearlyIncome = toDecimal(YearlyIncome),\n\t\tTotalChildren = toInteger(TotalChildren),\n\t\tNumberChildrenAtHome = toInteger(NumberChildrenAtHome),\n\t\tDateFirstPurchase = toDate(DateFirstPurchase),\n\t\tLoadDate = toDate(LoadDate),\n\t\tUpdateDate = toDate(UpdateDate)) ~> DerivedColumn1"
				},
				{
					"name": "Join1",
					"script": "DerivedColumn1, source2 join(toInteger(DerivedColumn1@CustomerKey) == source2@CustomerKey,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1"
				},
				{
					"name": "ConditionalSplit1",
					"script": "Join1 split(Occupation =='Professional',\n\tOccupation == 'Skilled Manual',\n\tOccupation == 'Management',\n\tdisjoint: false) ~> ConditionalSplit1@(Professional, SkilledManual, Management)"
				},
				{
					"name": "Pivot1",
					"script": "ConditionalSplit1@Professional pivot(groupBy(Gender,\n\t\tOccupation),\n\tpivotBy(Education),\n\tiif(isNull(sum(SalesAmount)) == false(), sum(SalesAmount), toDecimal(0)),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot1"
				},
				{
					"name": "GroupbyEducation",
					"script": "ConditionalSplit1@SkilledManual pivot(groupBy(Gender,\n\t\tOccupation),\n\tpivotBy(Education),\n\tiif(isNull(sum(SalesAmount)) == false(), sum(SalesAmount), toDecimal(0)),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> GroupbyEducation"
				},
				{
					"name": "GroupBy",
					"script": "ConditionalSplit1@Management pivot(groupBy(Gender,\n\t\tOccupation),\n\tpivotBy(Education),\n\tiif(isNull(sum(SalesAmount)) == false(), sum(SalesAmount), toDecimal(0)),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> GroupBy"
				}
			]
		}
	}
}